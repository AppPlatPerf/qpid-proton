Qpid Proton JavaScript Language Bindings
========================================

The code contained herein provides JavaScript language bindings for working
with the Qpid Proton AMQP 1.0 protocol engine and messenger library.

Creating The Bindings
=====================

To generate the JavaScript bindings we actually cross-compile from proton-c

You will need to have emscripten (https://github.com/kripken/emscripten) installed
to do the cross-compilation and in addition you will require a few things that
emscripten itself depends upon. https://github.com/kripken/emscripten/wiki/Emscripten-SDK
provides some fairly easy to follow instructions for getting started on several
platforms the main dependencies are as follows (on Windows the SDK includes these):

* The Emscripten code, from github (git clone git://github.com/kripken/emscripten.git.
  The documentation suggests master branch but in the short term incoming is
  probably better as a few updates to emscripten have been added to help get
  proton working and these may take a little while to get merged back to master.
* LLVM with Clang. Emscripten uses LLVM and Clang, but at the moment the JavaScript
  back-end for LLVM is off on a branch so you can't use a stock LLVM/Clang.
  https://github.com/kripken/emscripten/wiki/LLVM-Backend has lots of explanation
  and some easy to follow instructions for downloading and building fast-comp
* Node.js (0.8 or above; 0.10.17 or above to run websocket-using servers in node)
* Python 2.7.3
* Java is required in order to use the Closure Compiler to minify the code.
  

If you haven't run Emscripten before it's a good idea to have a play with the
tutorial https://github.com/kripken/emscripten/wiki/Tutorial




when you are all set up with emscripten and have got the basic tests in the
tutorial running building Proton should be simple, simply go to the Proton root
directory and follow the main instructions in the README there, in precis (from
the root directory) it's:

  mkdir build
  cd build
  cmake ..
  make

and you should be all set, to test it's all working do:

  node recv-async.js

in one window and

  node send-async.js

in another


KNOWN ISSUES
============

send-async and recv-async are both pretty hacky at the moment.


SUPPORT
=======

To report bugs in the bindings, or to request an enhancement, please file
a tracker request:

    https://issues.apache.org/jira/browse/PROTON

You can also directly interact with the development team and other users
in the #qpid channel on irc.freenode.net.
